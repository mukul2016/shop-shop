{"ast":null,"code":"var _jsxFileName = \"/Users/msharma/BWork/unit22-shopshop/shop-shop/client/src/components/CategoryMenu/index.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\nfunction CategoryMenu({\n  setCategory\n}) {\n  const categories = (categoryData === null || categoryData === void 0 ? void 0 : categoryData.categories) || [];\n  const {\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES); // const [state, dispatch] = useStoreContext();\n  // const { categories } = state;\n  // const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  // useEffect(() => {\n  //   // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n  //   if (categoryData) {\n  //     // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n  //     dispatch({\n  //       type: UPDATE_CATEGORIES,\n  //       categories: categoryData.categories\n  //     });\n  //   }\n  // }, [categoryData, dispatch]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      setCategory(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"sources":["/Users/msharma/BWork/unit22-shopshop/shop-shop/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useStoreContext","CategoryMenu","setCategory","categories","categoryData","data","QUERY_CATEGORIES","map","item","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,qBAA3D;AACA,SAASC,eAAT,QAAgC,yBAAhC;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuC;AACrC,QAAMC,UAAU,GAAG,CAAAC,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAED,UAAd,KAA4B,EAA/C;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAED;AAAR,MAAyBP,QAAQ,CAACS,gBAAD,CAAvC,CAFqC,CAGrC;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGH,UAAU,CAACI,GAAX,CAAgBC,IAAD,iBACd;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,WAAW,CAACM,IAAI,CAACC,GAAN,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAeD;;AAED,eAAeT,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\nfunction CategoryMenu({ setCategory }) {\n  const categories = categoryData?.categories || [];\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  // const [state, dispatch] = useStoreContext();\n\n  // const { categories } = state;\n\n  // const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  // useEffect(() => {\n  //   // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n  //   if (categoryData) {\n  //     // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n  //     dispatch({\n  //       type: UPDATE_CATEGORIES,\n  //       categories: categoryData.categories\n  //     });\n  //   }\n  // }, [categoryData, dispatch]);\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            setCategory(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}